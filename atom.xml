<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>tonngw&#39;s Blog</title>
  
  <subtitle>开博客就要写吖！</subtitle>
  <link href="https://tonngw.com/atom.xml" rel="self"/>
  
  <link href="https://tonngw.com/"/>
  <updated>2022-06-15T14:31:48.137Z</updated>
  <id>https://tonngw.com/</id>
  
  <author>
    <name>tonngw</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>校园网自动登录</title>
    <link href="https://tonngw.com/2022/06/14/%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/"/>
    <id>https://tonngw.com/2022/06/14/%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/</id>
    <published>2022-06-14T14:31:05.720Z</published>
    <updated>2022-06-15T14:31:48.137Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>每天打开电脑第一件事就是登录校园网，Emmm，时间久了，我就在想可不可以打开电脑就自动登录呢？</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>首先分析一下我们在校园网登录页面点击登录的时候发送了什么请求，其中 a70.htm 就是我们的登录页面，除了这个请求没有其他任何请求，没有看到 GET 请求，那么就是自然就是 POST 提交了，这也符合我们通常表单提交的逻辑。</p><blockquote><p>有的同学的校园网登录可能是 GET 提交，那更简单了，信息都在地址栏上，发送 GET 请求访问这个地址就可以实现自动登录了。</p></blockquote><p>这里我做了一个 POST 请求筛选，如果不做筛选会看到学校首页发送的一堆请求，这里为了清楚整洁就筛选掉了。</p><blockquote><p>Tops：我们在页面跳转调试网格请求的时候，记得勾上 Preserve log（保存日志），这样才能看到跳转之前发送的请求。</p></blockquote><p><img src="https://blog-1255494775.cos.ap-beijing.myqcloud.com/image-20220615212733939.png" alt="image-20220615212733939"></p><h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><p>搞清楚请求是如何提交的，就开始撸代码吧~，这里使用 Python 的 <code>requests</code> 库模拟网络请求</p><p>环境要求：<code>Win10 + Python3</code></p><p>代码说明：</p><ol><li>data：是要提交的数据，从上图中的 PayLoad 中查看</li><li>headers：是请求头，模拟浏览器请求，从上图中的 Headers 中查看</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> messagebox</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://202.112.208.3/&quot;</span></span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;DDDDD&quot;</span>: <span class="string">&quot;校园网账号&quot;</span>,</span><br><span class="line">    <span class="string">&quot;upass&quot;</span>: <span class="string">&quot;密码&quot;</span>,</span><br><span class="line">    <span class="string">&quot;R1&quot;</span>: <span class="string">&quot;0&quot;</span>, // 下面的参数根据自己的请求参数填写</span><br><span class="line">    <span class="string">&quot;R2&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;R3&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;R6&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;para&quot;</span>: <span class="string">&quot;00&quot;</span>,</span><br><span class="line">    <span class="string">&quot;0MKKey&quot;</span>: <span class="string">&quot;123456&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.5005.63 Safari/537.36&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh,en-US;q=0.9,en;q=0.8,zh-CN;q=0.7&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Content-Length&quot;</span>: <span class="string">&quot;157&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Cookie&quot;</span>: <span class="string">&quot;填自己的 Cookie&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;202.112.208.3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;http://202.112.208.3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;http://202.112.208.3/a70.htm&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">result = requests.post(url, data, headers=headers).status_code <span class="comment"># 发送 post 请求</span></span><br><span class="line"></span><br><span class="line">root = tkinter.Tk()</span><br><span class="line">root.withdraw()</span><br><span class="line"><span class="keyword">if</span> result == <span class="number">200</span>:</span><br><span class="line">    messagebox.showinfo(<span class="string">&quot;提示&quot;</span>, <span class="string">&quot;校园网登录成功&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    messagebox.showinfo(<span class="string">&quot;提示&quot;</span>, <span class="string">&quot;校园网登录失败&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;返回值: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(result))</span><br></pre></td></tr></table></figure><p>运行这个代码就可以实现代码自动登录了~</p><p>但是每次打开电脑需要我们运行这个代码，这还不够自动化吖，往下看！</p><h2 id="添加任务计划程序，实现开机-x2F-解锁屏幕自动登录"><a href="#添加任务计划程序，实现开机-x2F-解锁屏幕自动登录" class="headerlink" title="添加任务计划程序，实现开机 &#x2F; 解锁屏幕自动登录"></a>添加任务计划程序，实现开机 &#x2F; 解锁屏幕自动登录</h2><p>第一步：右键电脑左下角 Windows 图标，点击「计算机管理」</p><img src="https://blog-1255494775.cos.ap-beijing.myqcloud.com/计算机管理.png" alt="计算机管理" style="zoom: 67%;" /><p>第二步：点击「任务计划程序」，点击右侧创建任务</p><img src="https://blog-1255494775.cos.ap-beijing.myqcloud.com/任务计划程序.png" alt="任务计划程序" style="zoom: 50%;" /><p>第三步：如图所示输入内容</p><img src="https://blog-1255494775.cos.ap-beijing.myqcloud.com/常规配置.png" alt="常规配置" style="zoom: 67%;" /><p>第四步：新建触发器，即什么时候我们的程序生效，这里我选的是「工作站解锁时」（即每次解锁屏幕时），长时间不操作校园网可能掉线，所以每次我解锁电脑都能保证有网。</p><p>这里也可以选启动时，即电脑开机时执行程序，其他选项自行测试。</p><img src="https://blog-1255494775.cos.ap-beijing.myqcloud.com/触发器配置.png" alt="触发器配置" style="zoom:67%;" /><p>第五步：新建操作，填入 Python 解释器的位置，以及我们代码存放的位置</p><img src="https://blog-1255494775.cos.ap-beijing.myqcloud.com/操作配置.png" alt="操作配置" style="zoom:67%;" /><p>第六步：条件配置，可以修改</p><img src="https://blog-1255494775.cos.ap-beijing.myqcloud.com/条件配置.png" alt="条件配置" style="zoom:67%;" /><p>最后测试一下我们配置的计划任务是否能够执行</p><ol><li><p>选中我们创建的计划任务，点击运行，如果操作配置没问题，则会出现如下执行结果。</p><img src="https://blog-1255494775.cos.ap-beijing.myqcloud.com/测试结果.png" alt="测试结果" style="zoom:67%;" /><p><img src="https://blog-1255494775.cos.ap-beijing.myqcloud.com/%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.png" alt="运行结果"></p></li><li><p><code>Win + L</code> 锁屏，然后登录进来，看我们的计划任务是否能够正常执行。</p></li></ol><p>搞定，到此文章的所有内容就介绍完了~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;每天打开电脑第一件事就是登录校园网，Emmm，时间久了，我就在想可不可以打开电脑就自动登录呢？&lt;/p&gt;
&lt;h2 id=&quot;分析&quot;&gt;&lt;a hre</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://tonngw.com/2022/04/23/first/"/>
    <id>https://tonngw.com/2022/04/23/first/</id>
    <published>2022-04-23T10:14:29.644Z</published>
    <updated>2022-04-23T08:41:49.329Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>First Post！</title>
    <link href="https://tonngw.com/2018/08/08/hello-world/"/>
    <id>https://tonngw.com/2018/08/08/hello-world/</id>
    <published>2018-08-08T00:08:08.000Z</published>
    <updated>2022-04-23T10:54:12.112Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
